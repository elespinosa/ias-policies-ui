import { DatabaseTable } from "@/types/import";

export const mockDatabaseTables: DatabaseTable[] = [
  {
    name: "clients",
    displayName: "Clients",
    description:
      "Stores client information for both individuals and corporate entities",
    urlEndpoint: "http://localhost:3001/api/createClient",
    columns: [
      {
        name: "client_number",
        displayName: "Client Number",
        dataType: "VARCHAR",
        required: true,
        maxLength: 20,
        description: "Unique identifier for the client",
      },
      {
        name: "client_type",
        displayName: "Client Type",
        dataType: "ENUM",
        required: true,
        description: "Whether the client is an individual or corporate",
      },
      {
        name: "first_name",
        displayName: "First Name",
        dataType: "VARCHAR",
        required: false,
        maxLength: 50,
        description: "Individual client's first name",
      },
      {
        name: "last_name",
        displayName: "Last Name",
        dataType: "VARCHAR",
        required: false,
        maxLength: 50,
        description: "Individual client's last name",
      },
      {
        name: "id_number",
        displayName: "ID Number",
        dataType: "VARCHAR",
        required: false,
        maxLength: 30,
        description: "National ID/passport number",
      },
      {
        name: "date_of_birth",
        displayName: "Date of Birth",
        dataType: "DATE",
        required: false,
        description: "Individual client's date of birth",
      },
      {
        name: "gender",
        displayName: "Gender",
        dataType: "ENUM",
        required: false,
        description: "Gender of the individual client",
      },
      {
        name: "company_name",
        displayName: "Company Name",
        dataType: "VARCHAR",
        required: false,
        maxLength: 100,
        description: "Corporate client's company name",
      },
      {
        name: "tax_id",
        displayName: "Tax ID",
        dataType: "VARCHAR",
        required: false,
        maxLength: 30,
        description: "Corporate client's tax identification number",
      },
      {
        name: "primary_contact_person",
        displayName: "Primary Contact Person",
        dataType: "VARCHAR",
        required: false,
        maxLength: 100,
        description: "Main contact person for the corporate client",
      },
      {
        name: "industry",
        displayName: "Industry",
        dataType: "VARCHAR",
        required: false,
        maxLength: 50,
        description: "Industry the corporate client belongs to",
      },
      {
        name: "email",
        displayName: "Email",
        dataType: "VARCHAR",
        required: true,
        maxLength: 100,
        description: "Client's primary email address",
      },
      {
        name: "alternate_email",
        displayName: "Alternate Email",
        dataType: "VARCHAR",
        required: false,
        maxLength: 100,
        description: "Client's secondary email address",
      },
      {
        name: "mobile_phone",
        displayName: "Mobile Phone",
        dataType: "VARCHAR",
        required: false,
        maxLength: 40,
        description: "Client's mobile phone number",
      },
      {
        name: "landline_phone",
        displayName: "Landline Phone",
        dataType: "VARCHAR",
        required: false,
        maxLength: 20,
        description: "Client's landline phone number",
      },
      {
        name: "physical_address",
        displayName: "Physical Address",
        dataType: "TEXT",
        required: false,
        description: "Client's physical address",
      },
      {
        name: "billing_address",
        displayName: "Billing Address",
        dataType: "TEXT",
        required: false,
        description: "Client's billing address",
      },
      {
        name: "occupation",
        displayName: "Occupation",
        dataType: "VARCHAR",
        required: false,
        maxLength: 100,
        description: "Client's occupation (for individuals)",
      },
      {
        name: "risk_profile",
        displayName: "Risk Profile",
        dataType: "ENUM",
        required: false,
        description: "Client's risk classification",
      },
      {
        name: "preferred_communication",
        displayName: "Preferred Communication",
        dataType: "ENUM",
        required: false,
        description: "Client's preferred communication channel",
      },
      {
        name: "notes",
        displayName: "Notes",
        dataType: "TEXT",
        required: false,
        description: "Additional notes or remarks about the client",
      },
      {
        name: "assigned_agent_id",
        displayName: "Assigned Agent ID",
        dataType: "INT",
        required: false,
        description: "Reference to the agent assigned to the client",
      },
      {
        name: "status",
        displayName: "Status",
        dataType: "ENUM",
        required: true,
        defaultValue: "active",
        description: "Client's status (active, inactive, prospect)",
      },
      {
        name: "created_at",
        displayName: "Created At",
        dataType: "TIMESTAMP",
        required: true,
        defaultValue: "CURRENT_TIMESTAMP",
        description: "Timestamp of client creation",
      },
      {
        name: "updated_at",
        displayName: "Updated At",
        dataType: "TIMESTAMP",
        required: true,
        defaultValue: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP",
        description: "Timestamp of last update",
      },
    ],
  },
  {
    name: "products",
    displayName: "Products",
    description: "Product catalog and inventory",
    urlEndpoint: "http://localhost:3001/api/createProduct",
    columns: [
      {
        name: "id",
        displayName: "Product ID",
        dataType: "INT",
        required: true,
        description: "Auto-generated unique identifier",
      },
      {
        name: "name",
        displayName: "Product Name",
        dataType: "VARCHAR",
        required: true,
        maxLength: 100,
        description: "Product name or title",
      },
      {
        name: "description",
        displayName: "Description",
        dataType: "TEXT",
        required: false,
        description: "Detailed product description",
      },
      {
        name: "price",
        displayName: "Price",
        dataType: "DECIMAL",
        required: true,
        description: "Product price in decimal format",
      },
      {
        name: "sku",
        displayName: "SKU",
        dataType: "VARCHAR",
        required: true,
        maxLength: 50,
        description: "Stock Keeping Unit (must be unique)",
      },
      {
        name: "category",
        displayName: "Category",
        dataType: "VARCHAR",
        required: true,
        maxLength: 50,
        description: "Product category",
      },
      {
        name: "stock_quantity",
        displayName: "Stock Quantity",
        dataType: "INT",
        required: true,
        defaultValue: "0",
        description: "Current stock quantity",
      },
      {
        name: "is_available",
        displayName: "Available",
        dataType: "BOOLEAN",
        required: true,
        defaultValue: "true",
        description: "Whether the product is available for purchase",
      },
    ],
  },
  {
    name: "orders",
    displayName: "Orders",
    description: "Customer orders and transactions",
    urlEndpoint: "http://localhost:3001/api/createOrder",
    columns: [
      {
        name: "id",
        displayName: "Order ID",
        dataType: "INT",
        required: true,
        description: "Auto-generated unique identifier",
      },
      {
        name: "user_id",
        displayName: "User ID",
        dataType: "INT",
        required: true,
        description: "Reference to the user who placed the order",
      },
      {
        name: "order_number",
        displayName: "Order Number",
        dataType: "VARCHAR",
        required: true,
        maxLength: 20,
        description: "Unique order number",
      },
      {
        name: "total_amount",
        displayName: "Total Amount",
        dataType: "DECIMAL",
        required: true,
        description: "Total order amount",
      },
      {
        name: "status",
        displayName: "Order Status",
        dataType: "VARCHAR",
        required: true,
        maxLength: 20,
        defaultValue: "pending",
        description: "Current order status",
      },
      {
        name: "order_date",
        displayName: "Order Date",
        dataType: "DATETIME",
        required: true,
        defaultValue: "CURRENT_TIMESTAMP",
        description: "When the order was placed",
      },
      {
        name: "shipping_address",
        displayName: "Shipping Address",
        dataType: "TEXT",
        required: false,
        description: "Shipping address for the order",
      },
    ],
  },
  {
    name: "policies",
    displayName: "Policies",
    description: "Insurance policie3001sued to clients",
    urlEndpoint: "http://localhost:3001/api/createPolicy",
    columns: [
      {
        name: "policy_number",
        displayName: "Policy Number",
        dataType: "VARCHAR",
        required: true,
        maxLength: 30,
        description: "Unique policy number",
      },
      {
        name: "client_id",
        displayName: "Client ID",
        dataType: "INT",
        required: true,
        description: "Reference to the client this policy is issued to",
      },
      {
        name: "product_id",
        displayName: "Product ID",
        dataType: "INT",
        required: true,
        description: "Reference to the insurance product",
      },
      {
        name: "premium_amount",
        displayName: "Premium Amount",
        dataType: "DECIMAL",
        required: true,
        description: "Amount paid as premium for the policy",
      },
      {
        name: "coverage_amount",
        displayName: "Coverage Amount",
        dataType: "DECIMAL",
        required: true,
        description: "Maximum coverage amount provided by the policy",
      },
      {
        name: "deductible_amount",
        displayName: "Deductible Amount",
        dataType: "DECIMAL",
        required: true,
        description: "Deductible amount applicable for claims",
      },
      {
        name: "status",
        displayName: "Status",
        dataType: "ENUM",
        required: true,
        description:
          "Current status of the policy (active, pending, cancelled, expired, lapsed)",
      },
      {
        name: "effective_date",
        displayName: "Effective Date",
        dataType: "DATE",
        required: true,
        description: "Date the policy becomes effective",
      },
      {
        name: "expiration_date",
        displayName: "Expiration Date",
        dataType: "DATE",
        required: true,
        description: "Date the policy expires",
      },
      {
        name: "cancellation_date",
        displayName: "Cancellation Date",
        dataType: "DATE",
        required: false,
        description: "Date the policy was cancelled, if applicable",
      },
      {
        name: "cancellation_reason",
        displayName: "Cancellation Reason",
        dataType: "TEXT",
        required: false,
        description: "Reason for cancellation of the policy",
      },
      {
        name: "payment_frequency",
        displayName: "Payment Frequency",
        dataType: "ENUM",
        required: true,
        description:
          "How often the premium is paid (monthly, quarterly, semi-annual, annual, one-time)",
      },
      {
        name: "payment_method_id",
        displayName: "Payment Method ID",
        dataType: "INT",
        required: false,
        description: "Reference to the payment method used",
      },
      {
        name: "auto_renewal",
        displayName: "Auto Renewal",
        dataType: "INT",
        required: true,
        defaultValue: "1",
        description: "Indicates whether the policy is set to auto-renew",
      },
      {
        name: "underwriting_notes",
        displayName: "Underwriting Notes",
        dataType: "TEXT",
        required: false,
        description: "Notes from the underwriting process",
      },
      {
        name: "agent_id",
        displayName: "Agent ID",
        dataType: "INT",
        required: false,
        description: "Reference to the agent managing the policy",
      },
      {
        name: "commission_rate",
        displayName: "Commission Rate",
        dataType: "DECIMAL",
        required: false,
        description: "Rate of commission (in percentage) for the agent",
      },
      {
        name: "created_at",
        displayName: "Created At",
        dataType: "TIMESTAMP",
        required: true,
        defaultValue: "CURRENT_TIMESTAMP",
        description: "Timestamp when the policy record was created",
      },
      {
        name: "updated_at",
        displayName: "Updated At",
        dataType: "TIMESTAMP",
        required: true,
        defaultValue: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP",
        description: "Timestamp when the policy record was last updated",
      },
    ],
  },
];

export const policyUploadingTemplate: DatabaseTable = {
  name: "policies",
  displayName: "Policies",
  description: "Insurance policie3001sued to clients",
  urlEndpoint: "/api/createPolicy",
  columns: [
    {
      name: "client_id",
      displayName: "uploading:policies:client_id",
      dataType: "INT",
      required: true,
      description: "Reference to the client this policy is issued to",
    },
    {
      name: "ref_policy_number",
      displayName: "uploading:policies:ref_policy_number",
      dataType: "VARCHAR",
      required: false,
      maxLength: 30,
      description: "Reference to the policy number",
    },
    {
      name: "partner_id",
      displayName: "uploading:policies:partner_id",
      dataType: "INT",
      required: true,
      description: "Reference to the partner",
    },
    {
      name: "product_id",
      displayName: "uploading:policies:product_id",
      dataType: "INT",
      required: true,
      description: "Reference to the insurance product",
    },
    {
      name: "effective_date",
      displayName: "uploading:policies:effective_date",
      dataType: "DATE",
      required: true,
      description: "Date the policy becomes effective",
    },
    {
      name: "expiration_date",
      displayName: "uploading:policies:expiration_date",
      dataType: "DATE",
      required: true,
      description: "Date the policy expires",
    },
    {
      name: "currency_code",
      displayName: "uploading:policies:currency_code",
      dataType: "VARCHAR",
      required: true,
      maxLength: 30,
      description: "Currency code",
    },
    {
      name: "currency_rate",
      displayName: "uploading:policies:currency_rate",
      dataType: "DECIMAL",
      required: true,
      description: "Currency rate",
    },
    {
      name: "premium_amount",
      displayName: "uploading:policies:premium_amount",
      dataType: "DECIMAL",
      required: true,
      description: "Amount paid as premium for the policy",
    },
    {
      name: "payment_frequency",
      displayName: "uploading:policies:payment_frequency",
      dataType: "ENUM",
      required: true,
      description:
        "Current status of the policy (monthly, quarterly, semi-annual, annual, one-time)",
    },
    {
      name: "coverage_amount",
      displayName: "uploading:policies:coverage_amount",
      dataType: "DECIMAL",
      required: true,
      description: "Maximum coverage amount provided by the policy",
    },
    {
      name: "deductible_amount",
      displayName: "uploading:policies:deductible_amount",
      dataType: "DECIMAL",
      required: true,
      description: "Deductible amount applicable for claims",
    },
    {
      name: "insured_properties",
      displayName: "uploading:policies:insured_properties",
      dataType: "TEXT",
      required: false,
      description: "Insured properties",
    },
    {
      name: "underwriting_notes",
      displayName: "uploading:policies:underwriting_notes",
      dataType: "TEXT",
      required: false,
      description: "Underwriting notes",
    },
  ],
  additionalColumns: [
    {
      name: "status",
      dataType: "ENUM",
      required: true,
      defaultValue: "active",
      description: "Status of the policy",
      displayName: "uploading:policies:status",
    },
    {
      name: "auto_renewal",
      dataType: "INT",
      required: true,
      defaultValue: "1",
      description: "Indicates whether the policy is set to auto-renew",
      displayName: "uploading:policies:auto_renewal",
    },
  ],
};
