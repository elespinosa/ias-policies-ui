[
  {
    "id": "endpoint_1753251172139",
    "name": "get policy providers",
    "method": "GET",
    "url": "/api/get-policy-products-by-type",
    "requireToken": false,
    "sqlQuery": "SELECT a.id AS `providerId`, a.partner_name AS `provider`, b.id AS `productId`, b.name AS `productName`, b.type as `productType`, is_active as `isActive`\n  FROM partners a\n  JOIN insurance_products b\n    ON a.id = b.partner_id",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-29T00:13:39.220Z"
  },
  {
    "id": "endpoint_1756280082826",
    "name": "Currency LOV",
    "method": "GET",
    "url": "/api/currency-lov",
    "requireToken": false,
    "sqlQuery": "SELECT currency_code, symbol, currency_name, currency_rate\n  FROM currencies",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-27T07:39:01.839Z"
  },
  {
    "id": "endpoint_1756281947232",
    "name": "payment frequency",
    "method": "GET",
    "url": "/api/payment-frequency-lov",
    "requireToken": false,
    "sqlQuery": "WITH RECURSIVE enum_values AS (\n  SELECT \n    SUBSTRING(COLUMN_TYPE, 6, LENGTH(COLUMN_TYPE) - 6) AS enum_list,\n    1 AS pos\n  FROM information_schema.COLUMNS\n  WHERE TABLE_SCHEMA = 'iasdb' \n    AND TABLE_NAME = 'policies'\n    AND COLUMN_NAME = 'payment_frequency'\n  UNION ALL\n  SELECT \n    enum_list,\n    pos + 1\n  FROM enum_values\n  WHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', '')))\n)\nSELECT \n  TRIM(BOTH \"'\" FROM \n    SUBSTRING_INDEX(\n      SUBSTRING_INDEX(enum_list, ',', pos),\n      ',',\n      -1\n    )\n  ) AS payment_frequency\nFROM enum_values\nWHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', '')) + 1)\n  AND enum_list != ''",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-27T08:06:13.216Z"
  },
  {
    "id": "endpoint_1745318161445",
    "name": "Policy Listing",
    "method": "GET",
    "url": "/api/policyListing",
    "requireToken": false,
    "sqlQuery": "SELECT id, policy_number, type, partner_name AS 'provider', client_name as client, status, CONCAT(effective_date, ' - ', expiration_date) as period, currency_code, premium, COUNT(1) OVER() AS total_records\nFROM policy_listing_v\nWHERE 1=1 \n  AND (:p_status IS NULL OR STATUS = :p_status) \n  AND (:p_partner_id IS NULL OR PARTNER_ID = :p_partner_id) \n  AND (:p_search IS NULL \n  \t\t\tOR INSTR(LOWER(policy_number), LOWER(:p_search)) > 0 \n\t\t\tOR INSTR(LOWER(client_name), LOWER(:p_search)) > 0\n\t\t\tOR INSTR(LOWER(type), LOWER(:p_search)) > 0\n\t\t\tOR INSTR(LOWER(premium), LOWER(:p_search)) > 0\n  \t\t)\nORDER BY policy_number\nLIMIT :p_rows_per_page OFFSET :p_page_no",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_search",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_page_no",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "p_status",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_partner_id",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_rows_per_page",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-28T06:10:39.456Z"
  },
  {
    "id": "endpoint_1745569974285",
    "name": "Policy Status",
    "method": "GET",
    "url": "/api/policyStatus",
    "requireToken": false,
    "sqlQuery": "WITH RECURSIVE enum_values AS (\n  SELECT \n    SUBSTRING(COLUMN_TYPE, 6, LENGTH(COLUMN_TYPE) - 6) AS enum_list,\n    1 AS pos\n  FROM information_schema.COLUMNS\n  WHERE TABLE_SCHEMA = 'iasdb' \n    AND TABLE_NAME = 'policies'\n    AND COLUMN_NAME = 'status'\n  UNION ALL\n  SELECT \n    enum_list,\n    pos + 1\n  FROM enum_values\n  WHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', '')))\n)\nSELECT \n  TRIM(BOTH \"'\" FROM \n    SUBSTRING_INDEX(\n      SUBSTRING_INDEX(enum_list, ',', pos),\n      ',',\n      -1\n    )\n  ) AS id,\n  INITCAP(TRIM(BOTH \"'\" FROM \n    SUBSTRING_INDEX(\n      SUBSTRING_INDEX(enum_list, ',', pos),\n      ',',\n      -1\n    )\n  )) AS description\nFROM enum_values\nWHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', '')) + 1)\n  AND enum_list != '';",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-04-25T08:32:54.285Z"
  },
  {
    "id": "endpoint_1752060041856",
    "name": "Policy Metrics",
    "method": "GET",
    "url": "/api/policy-metrics",
    "requireToken": false,
    "sqlQuery": "SELECT *\nFROM policy_dashboard_metrics",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-07-09T11:20:41.856Z"
  },
  {
    "id": "endpoint_1752263189435",
    "name": "Policy Partners",
    "method": "GET",
    "url": "/api/policy-providers",
    "requireToken": false,
    "sqlQuery": "Select id as partner_id, partner_name\nfrom partners\nwhere status = 'active'",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-07-11T20:10:57.420Z"
  },
  {
    "id": "endpoint_1753249900510",
    "name": "policy types",
    "method": "GET",
    "url": "/api/policy-types",
    "requireToken": false,
    "sqlQuery": "SELECT type\n  FROM (WITH RECURSIVE enum_values AS (\n\t\t\t\tSELECT SUBSTRING(COLUMN_TYPE, 6, LENGTH(COLUMN_TYPE) - 6) AS enum_list, 1 AS pos\n                  FROM information_schema.COLUMNS\n                 WHERE TABLE_SCHEMA = 'iasdb' \n\t\t\t\t   AND TABLE_NAME = 'insurance_products'\n                   AND COLUMN_NAME = 'type'\n\t\t\t\t UNION ALL\n\t\t\t\tSELECT enum_list, pos + 1\n                  FROM enum_values\n                  WHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', ''))))\n\t\tSELECT TRIM(BOTH \"'\" FROM SUBSTRING_INDEX(SUBSTRING_INDEX(enum_list, ',', pos), ',', -1)) AS type\n          FROM enum_values\n         WHERE pos <= (LENGTH(enum_list) - LENGTH(REPLACE(enum_list, ',', '')) + 1)\n           AND enum_list != '') a\n WHERE a.type IN (SELECT type FROM insurance_products WHERE is_active = 1)",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-28T01:22:02.938Z"
  },
  {
    "id": "endpoint_1754011212902",
    "name": "Cancel Policy",
    "method": "POST",
    "url": "/api/cancel-policy",
    "requireToken": false,
    "sqlQuery": "",
    "sqlProcedure": "UPDATE policies\n   SET status = 'cancelled',\n\t   cancellation_reason = :p_cancellation_reason,\n       cancellation_date = CURRENT_DATE()\n WHERE id = :p_policy_id",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_cancellation_reason",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "p_policy_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-05T00:06:47.845Z"
  },
  {
    "id": "endpoint_1756364775289",
    "name": "quotes policy lov",
    "method": "GET",
    "url": "/api/policy/quotes-lov",
    "requireToken": false,
    "sqlQuery": "SELECT a.id, a.quote_number,\n\t   a.client_id,\n       (CASE WHEN(`c`.`client_type` = 'individual')\n\t\t\t\tTHEN concat(`c`.`first_name`,' ', `c`.`last_name`)\n\t\t\tELSE `c`.`company_name` END) AS `client_name`,\n       b.partner_id, d.partner_name, a.product_id,\n       b.name AS `product_name`, a.policy_type, b.type,\n       DATE_FORMAT(a.effective_date, '%Y-%m-%d') AS start_date, DATE_FORMAT(a.expiration_date, '%Y-%m-%d') AS end_date,\n       a.quoted_premium, a.coverage_amount, a.deductible_amount,\n       a.quote_data, a.status, COUNT(1) OVER() AS `total_records`\n  FROM quotes a\n  JOIN insurance_products b\n    ON a.product_id = b.id\n  JOIN clients c\n    ON a.client_id = c.id\n  JOIN partners d\n    ON b.partner_id = d.id\n WHERE a.status = 'approved'\n   AND (\t:p_search IS NULL \n\t\tOR INSTR(LOWER(concat(`c`.`first_name`,' ', `c`.`last_name`)), LOWER(:p_search)) > 0\n\t\tOR INSTR(LOWER(`c`.`company_name`), LOWER(:p_search)) > 0 \n\t\tOR INSTR(LOWER(quote_number), LOWER(:p_search)) > 0\t\t)\n ORDER BY a.id\n LIMIT :p_rows_per_page OFFSET :p_page_no",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_rows_per_page",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "p_search",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_page_no",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-29T03:03:04.592Z"
  },
  {
    "id": "endpoint_1756250009468",
    "name": "clients lov",
    "method": "GET",
    "url": "/api/clients-lov",
    "requireToken": false,
    "sqlQuery": "SELECT \n  id,\n  client_type, \n  CASE \n    WHEN client_type = 'individual' THEN CONCAT(first_name, ' ', last_name) \n    ELSE company_name \n  END AS name,\n  email,\n  customer_type,\n  COUNT(1) OVER() total_records\nFROM client_listing_v\nWHERE status <> 'inactive'\n  AND (\n    :p_search IS NULL \n    OR INSTR(LOWER(\n      CASE \n        WHEN client_type = 'individual' THEN CONCAT(first_name, ' ', last_name) \n        ELSE company_name \n      END\n    ), LOWER(:p_search)) > 0 \n    OR INSTR(LOWER(email), LOWER(:p_search)) > 0\n    OR INSTR(LOWER(client_type), LOWER(:p_search)) > 0\n    OR INSTR(LOWER(mobile_phone), LOWER(:p_search)) > 0\n  )\nORDER BY id\nLIMIT :p_rows_per_page \nOFFSET :p_page_no",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_rows_per_page",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "p_search",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_page_no",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-26T23:17:21.427Z"
  },
  {
    "id": "endpoint_1754011766513",
    "name": "get all policies",
    "method": "GET",
    "url": "/api/get-all-policies",
    "requireToken": false,
    "sqlQuery": "SELECT id, policy_number, type, partner_name AS 'provider', client_name as client, status, CONCAT(effective_date, ' - ', expiration_date) as period, premium\n  FROM policy_listing_v\n WHERE (:p_status IS NULL OR STATUS = :p_status) \n  AND (:p_partner_id IS NULL OR PARTNER_ID = :p_partner_id) \n  AND (:p_search IS NULL \n  \t\t\tOR INSTR(LOWER(policy_number), LOWER(:p_search)) > 0 \n\t\t\tOR INSTR(LOWER(client_name), LOWER(:p_search)) > 0\n\t\t\tOR INSTR(LOWER(type), LOWER(:p_search)) > 0\n\t\t\tOR INSTR(LOWER(premium), LOWER(:p_search)) > 0\n  \t\t)\nORDER BY policy_number",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_status",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_partner_id",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "p_search",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-19T07:22:04.206Z"
  },
  {
    "id": "endpoint_1755480072620",
    "name": "Add Policies (Uploading of Policies)",
    "method": "POST",
    "url": "/api/createPolicy",
    "requireToken": false,
    "sqlQuery": "SELECT id as policy_id, policy_number, ref_policy_number,\n\t   type, partner_id, partner_name, product_id, product_name,\n       client_id, client_name, status,\n       DATE_FORMAT(effective_date, '%Y-%m-%d') AS start_date, DATE_FORMAT(expiration_date, '%Y-%m-%d') AS end_date,\n       currency_code, currency_rate, premium, payment_frequency, coverage, deductible,\n       payment_method_id, auto_renewal, agent_id, commission_rate, insured_properties,\n       underwriting_notes,\n       client_type, preferred_communication, mobile_phone, landline_phone, billing_address, email,\n       DATE_FORMAT(effective_date, '%m/%d/%Y') AS effective_date, DATE_FORMAT(expiration_date, '%m/%d/%Y') AS expiration_date,\n       DATE_FORMAT(date_created, '%Y-%m-%d') AS date_created, DATE_FORMAT(updated_at, '%Y-%m-%d') AS updated_at\nFROM policy_listing_v a\nWHERE id = @id",
    "sqlProcedure": "call create_policy($jsonPayload, @id);",
    "payload": "{\n  \"policy_id\": 1,\n  \"policy_number\": \"\",\n  \"ref_policy_number\": \"\",\n  \"client_id\": 1,\n  \"partner_id\": 1,\n  \"product_id\": 1,\n  \"currency_code\": \"PHP\",\n  \"currency_rate\": 1,\n  \"premium_amount\": 10000,\n  \"coverage_amount\": 10000,\n  \"deductible_amount\": 10000,\n  \"insured_properties\": \"\",\n  \"status\": \"active\",\n  \"effective_date\": \"2025-08-28\",\n  \"expiration_date\": \"2026-08-28\",\n  \"payment_frequency\": \"one-time\",\n  \"payment_method_id\": 1,\n  \"auto_renewal\": 1,\n  \"underwriting_notes\": \"\",\n  \"agent_id\": 1,\n  \"commission_rate\": 1\n}",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [
      {
        "name": "policy_id",
        "type": "number",
        "required": false,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "policy_number",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "ref_policy_number",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "client_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "partner_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "product_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "currency_code",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "currency_rate",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 6
        }
      },
      {
        "name": "premium_amount",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 2
        }
      },
      {
        "name": "coverage_amount",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 2
        }
      },
      {
        "name": "deductible_amount",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 2
        }
      },
      {
        "name": "insured_properties",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "status",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "effective_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "expiration_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "payment_frequency",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "payment_method_id",
        "type": "number",
        "required": false,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "auto_renewal",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0,
          "minimum": 0,
          "maximum": 1
        }
      },
      {
        "name": "underwriting_notes",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "agent_id",
        "type": "number",
        "required": false,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "commission_rate",
        "type": "number",
        "required": false,
        "numberConstraints": {
          "precision": 2
        }
      }
    ],
    "status": "active",
    "lastUsed": "2025-08-28T05:26:40.292Z",
    "jsonSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "policy_id": {
          "type": "number",
          "precision": 0
        },
        "policy_number": {
          "type": "string"
        },
        "ref_policy_number": {
          "type": "string"
        },
        "client_id": {
          "type": "number",
          "precision": 0
        },
        "partner_id": {
          "type": "number",
          "precision": 0
        },
        "product_id": {
          "type": "number",
          "precision": 0
        },
        "currency_code": {
          "type": "string"
        },
        "currency_rate": {
          "type": "number",
          "precision": 6
        },
        "premium_amount": {
          "type": "number",
          "precision": 2
        },
        "coverage_amount": {
          "type": "number",
          "precision": 2
        },
        "deductible_amount": {
          "type": "number",
          "precision": 2
        },
        "insured_properties": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "effective_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "expiration_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "payment_frequency": {
          "type": "string"
        },
        "payment_method_id": {
          "type": "number",
          "precision": 0
        },
        "auto_renewal": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "precision": 0
        },
        "underwriting_notes": {
          "type": "string"
        },
        "agent_id": {
          "type": "number",
          "precision": 0
        },
        "commission_rate": {
          "type": "number",
          "precision": 2
        }
      },
      "required": [
        "client_id",
        "partner_id",
        "product_id",
        "currency_code",
        "currency_rate",
        "premium_amount",
        "coverage_amount",
        "deductible_amount",
        "status",
        "effective_date",
        "expiration_date",
        "payment_frequency",
        "auto_renewal"
      ]
    }
  },
  {
    "id": "endpoint_1753834591483",
    "name": "Renew Policy",
    "method": "POST",
    "url": "/api/renew-policy",
    "requireToken": false,
    "sqlQuery": "SELECT @p_message AS message",
    "sqlProcedure": "CALL renew_policy(:p_policy_id, @p_message)",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_policy_id",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-04T23:59:04.338Z"
  },
  {
    "id": "endpoint_1745574232859",
    "name": "Policy Details",
    "method": "GET",
    "url": "/api/policyDetails",
    "requireToken": false,
    "sqlQuery": "SELECT id as policy_id, policy_number, ref_policy_number,\n\t   type, partner_id, partner_name, product_id, product_name,\n       client_id, client_name, status,\n       DATE_FORMAT(effective_date, '%Y-%m-%d') AS start_date, DATE_FORMAT(expiration_date, '%Y-%m-%d') AS end_date,\n       currency_code, currency_rate, premium, payment_frequency, coverage, deductible,\n       payment_method_id, auto_renewal, agent_id, commission_rate, insured_properties,\n       underwriting_notes,\n       client_type, preferred_communication, mobile_phone, landline_phone, billing_address, email,\n       DATE_FORMAT(effective_date, '%m/%d/%Y') AS effective_date, DATE_FORMAT(expiration_date, '%m/%d/%Y') AS expiration_date,\n       DATE_FORMAT(date_created, '%Y-%m-%d') AS date_created, DATE_FORMAT(updated_at, '%Y-%m-%d') AS updated_at\nFROM policy_listing_v a\nWHERE id = :id",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-08-28T03:42:18.720Z"
  },
  {
    "id": "endpoint_1752028704982",
    "name": "save-claim",
    "method": "POST",
    "url": "/api/claims",
    "requireToken": false,
    "sqlQuery": "",
    "sqlProcedure": "call create_claim($jsonPayload, @id);",
    "payload": "{\n    \"policy_id\": 1,\n    \"claim_type\": \"auto\",\n    \"incident_date\": \"2025-05-20\",\n    \"report_date\" : \"2025-05-20\",\n    \"description\" : \"test description\",\n    \"location\" : \"test location\",\n    \"status\" : \"pending_info\",\n    \"total_amount_claimed\" : \"100.00\",\n    \"appoved_amount\" : \"100.00\",\n    \"deductible_applied\" : \"100.00\",\n    \"denial_reason\" : \"test denial reason\"\n}",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [
      {
        "name": "policy_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "incident_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "report_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "description",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "location",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "status",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "total_amount_claimed",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "appoved_amount",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "deductible_applied",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "denial_reason",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "claim_type",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      }
    ],
    "status": "active",
    "lastUsed": "2025-07-15T01:31:32.604Z",
    "jsonSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "policy_id": {
          "type": "number",
          "precision": 0
        },
        "incident_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "report_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_amount_claimed": {
          "type": "string"
        },
        "appoved_amount": {
          "type": "string"
        },
        "deductible_applied": {
          "type": "string"
        },
        "denial_reason": {
          "type": "string"
        },
        "claim_type": {
          "type": "string"
        }
      },
      "required": [
        "policy_id",
        "incident_date",
        "report_date",
        "description",
        "status",
        "total_amount_claimed",
        "claim_type"
      ]
    }
  },
  {
    "id": "endpoint_1752114348841",
    "name": "update-claim",
    "method": "PATCH",
    "url": "/api/claims",
    "requireToken": false,
    "sqlQuery": "",
    "sqlProcedure": "call update_claim($jsonPayload);",
    "payload": "{\n    \"id\": \"1\",\n    \"policy_id\": \"1\",\n    \"client_id\": \"1\",\n    \"agent_id\": \"1\",\n    \"claim_type\": \"auto\",\n    \"incident_date\": \"05/20/2025\",\n    \"report_date\" : \"05/20/2025\",\n    \"description\" : \"test description\",\n    \"location\" : \"test location\",\n    \"status\" : \"pending_info\",\n    \"total_amount_claimed\" : \"100.00\",\n    \"appoved_amount\" : \"100.00\",\n    \"deductible_applied\" : \"100.00\",\n    \"denial_reason\" : \"test denial reason\" \n}",
    "pathParams": [],
    "queryParams": [],
    "payloadParams": [
      {
        "name": "client_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "claim_type",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "incident_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "report_date",
        "type": "date",
        "required": true,
        "dateConstraints": {
          "dateFormat": "YYYY-MM-DD"
        }
      },
      {
        "name": "description",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "location",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "status",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "total_amount_claimed",
        "type": "string",
        "required": true,
        "stringConstraints": {}
      },
      {
        "name": "appoved_amount",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "deductible_applied",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "denial_reason",
        "type": "string",
        "required": false,
        "stringConstraints": {}
      },
      {
        "name": "policy_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "agent_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      },
      {
        "name": "id",
        "type": "number",
        "required": false,
        "numberConstraints": {
          "precision": 0
        }
      }
    ],
    "status": "active",
    "lastUsed": "2025-07-14T04:48:26.968Z",
    "jsonSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "client_id": {
          "type": "number",
          "precision": 0
        },
        "claim_type": {
          "type": "string"
        },
        "incident_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "report_date": {
          "type": "string",
          "customDateFormat": "YYYY-MM-DD"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_amount_claimed": {
          "type": "string"
        },
        "appoved_amount": {
          "type": "string"
        },
        "deductible_applied": {
          "type": "string"
        },
        "denial_reason": {
          "type": "string"
        },
        "policy_id": {
          "type": "number",
          "precision": 0
        },
        "agent_id": {
          "type": "number",
          "precision": 0
        },
        "id": {
          "type": "number",
          "precision": 0
        }
      },
      "required": [
        "client_id",
        "claim_type",
        "incident_date",
        "report_date",
        "description",
        "status",
        "total_amount_claimed",
        "policy_id",
        "agent_id"
      ]
    }
  },
  {
    "id": "endpoint_1753767620788",
    "name": "payment based on policy",
    "method": "GET",
    "url": "/api/payment-by-policy",
    "requireToken": false,
    "sqlQuery": "SELECT policy_id, id as \"payment_id\", policy_number, client_name as 'client', \n\t\tpartner_name AS 'provider', product_name AS type,\n        premium, status, transaction_reference as 'reference_no', DATE_FORMAT(due_date, '%Y-%m-%m') as due_date, DATE_FORMAT(date, '%Y-%m-%m') as date\n  FROM payment_listing_v\n WHERE policy_id = :p_policy_id\n ORDER BY status",
    "sqlProcedure": "",
    "pathParams": [],
    "queryParams": [
      {
        "name": "p_policy_id",
        "type": "number",
        "required": true,
        "numberConstraints": {
          "precision": 0
        }
      }
    ],
    "payloadParams": [],
    "status": "active",
    "lastUsed": "2025-07-29T05:47:50.662Z"
  }
]
